import pandas as pd
import streamlit as st
import plotly.express as px
import os

def run():
    # === PATH CONFIG ===
    CSV_PATH = './data/youtube_comments_full.csv'
    st.subheader("‚å® ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÄ‡πÄ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")
    
    # === FILE CHECK ===
    if not os.path.exists(CSV_PATH):
        st.error(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà {CSV_PATH}")
        return

    # === LOAD CSV ===
    df = pd.read_csv(CSV_PATH)

    if "comment_text_display" not in df.columns:
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'comment_text_display' ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ô‡∏µ‡πâ")
        return

    # === PREPROCESS DATE ===
    if "published_at" in df.columns:
        df['published_at'] = pd.to_datetime(df['published_at'], errors='coerce')
        df = df.dropna(subset=['published_at'])  # ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        df['year_month'] = df['published_at'].dt.to_period('M').astype(str)  # ‡πÄ‡∏ä‡πà‡∏ô 2025-04
    else:
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'published_at' ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV")
        return

    # === COUNT COMMENTS ===
    comment_counts = df.groupby(['year_month', 'video_title']).size().reset_index(name='comment_count')

    # === PLOT WITH PLOTLY ===
    fig = px.line(
        comment_counts,
        x='year_month',
        y='comment_count',
        color='video_title',
        markers=True,
        title='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠',
        #labels={
        #    'year_month': '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        #    'comment_count': '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå',
        #    'video_title': '‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠'
        #}
    )
    fig.update_layout(xaxis=dict(tickangle=45))
    st.plotly_chart(fig, use_container_width=True)

    # === OPTIONAL: SHOW RAW DATA ===
    with st.expander("üìã ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö"):
        st.dataframe(comment_counts)


            




