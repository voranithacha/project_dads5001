import streamlit as st
import duckdb as db

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô sidebar ‡∏Å‡πà‡∏≠‡∏ô radio
st.sidebar.markdown("<h3 style='font-size:20px;'>üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏≤‡∏£ Preview Comments</h3>", unsafe_allow_html=True)
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á
sub_page = st.sidebar.radio("", ["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ comments ‡πÄ‡πÄ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
                                 "Word Cloud",
                                 "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Like ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î", 
                                 "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Reply ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î", 
                                 "Top5 Users ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Comments ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
                                 "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
                                 "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
                                 "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î",
                                 "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á new"
                                
                                 ])
# ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if sub_page == "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ comments ‡πÄ‡πÄ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
  from pages.Comment_Preview import Count_Comments_Monthly
  Count_Comments_Monthly.run()
elif sub_page == "Word Cloud":
  from pages.Comment_Preview import Word_Cloud
  Word_Cloud.run()
elif sub_page == "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á new":
  from pages.Comment_Preview import New_test
  New_test.run()
elif sub_page == "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Like ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î":
  st.markdown("### Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Like ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
  con = db.connect('./comment.duckdb')
  top_like = con.execute("SELECT comment_text_original as comment, like_count FROM yt_comment_full order by like_count desc limit 5;")
  st.write(top_like)
elif sub_page == "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Reply ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î":
  st.markdown("### Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Reply ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
  con = db.connect('./comment.duckdb')
  top_reply = con.execute("SELECT comment_text_original as comment, reply_count FROM yt_comment_full order by reply_count desc limit 5;")
  st.write(top_reply)
elif sub_page == "Top5 Users ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Comments ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î":
  st.markdown("### Top5 Users ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Comments ‡πÄ‡∏¢‡∏≠‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
  con = db.connect('./comment.duckdb')
  top_like = con.execute("SELECT author_display_name, count(1) as total_comment FROM yt_comment_full group by author_display_name order by count(1) desc limit 5;")
  st.write(top_like)
elif sub_page == "Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î":
  st.markdown("### Top5 Comments ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
  con = db.connect('./comment.duckdb')
  top_like = con.execute("SELECT comment_text_original as comment, length(comment_text_original) as length_comment FROM yt_comment_full order by length(comment_text_original) desc limit 5;")
  st.write(top_like)
elif sub_page == "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
  st.markdown("### ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")
  con = db.connect('./comment.duckdb')
  top_like = con.execute("SELECT strftime('%Y-%m', CAST(published_at AS TIMESTAMP)) as year_month , count(1) as total_comment FROM yt_comment_full group by year_month order by year_month asc;")
  st.write(top_like)
elif sub_page == "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î":
  st.markdown("### ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Comments ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î")
  comment_type = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏£‡∏ñ", ["BYD Atto3", "BYD Seal", "BYD Dolphin"])
  car_video_mapping = {"BYD Atto3": "OMV9F9zB4KU", "BYD Seal": "87lJCDADWCo", "BYD Dolphin": "CbkX7H-0BIU"}
  selected_video_id = car_video_mapping[comment_type]
  st.markdown("---")

  st.markdown("### ‡∏´‡∏°‡∏ß‡∏î ‡∏£‡∏≤‡∏Ñ‡∏≤ üè∑Ô∏è")
  con = db.connect('comment.duckdb')
  price = con.execute(f"""
  SELECT distinct comment                    
  FROM comment_data 
  WHERE video_id = '{selected_video_id}'
  and (comment like '%‡∏£‡∏≤‡∏Ñ‡∏≤%' or comment like '%‡∏ã‡∏∑‡πâ‡∏≠%' or comment like '%‡∏Ç‡∏≤‡∏¢%' or comment like '%‡∏ñ‡∏π‡∏Å%' or comment like '%‡πÅ‡∏û‡∏á%')
  limit 5; """).fetchdf()
  st.write(price)
  st.markdown("---")

  st.markdown("### ‡∏´‡∏°‡∏ß‡∏î ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û üõ£Ô∏è")
  efficient = con.execute(f"""
  SELECT distinct comment                    
  FROM comment_data 
  WHERE video_id = '{selected_video_id}'
  and (comment like '%‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û%' or comment like '%‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà%' or comment like '%‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô%' or comment like '%‡∏ñ‡∏µ‡πà%' or comment like '%‡∏ó‡∏ô%')
  limit 5; """).fetchdf()
  st.write(efficient)
  st.markdown("---")

  st.markdown("### ‡∏´‡∏°‡∏ß‡∏î ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ üßëüèª‚Äçüíª")
  tech = con.execute(f"""
  SELECT distinct comment                    
  FROM comment_data 
  WHERE video_id = '{selected_video_id}'
  and (comment like '%‡∏õ‡∏•‡∏≠‡∏î%' or comment like '%‡∏£‡∏∞‡∏ö‡∏ö%' or comment like '%‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô%' or comment like '%‡∏ä‡∏≤‡∏£‡πå‡∏à%' or comment like '%‡πÅ‡∏ö‡∏ï%')
  limit 5; """).fetchdf()
  st.write(tech)
  st.markdown("---")

  st.markdown("### ‡∏´‡∏°‡∏ß‡∏î ‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á üöò")
  design = con.execute(f"""
  SELECT distinct comment                    
  FROM comment_data 
  WHERE video_id = '{selected_video_id}'
  and (comment like '%‡∏™‡∏ß‡∏¢%' or comment like '%‡∏™‡∏µ%' or comment like '%‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô%' or comment like '%‡∏´‡∏ô‡πâ‡∏≤%' or comment like '%‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå%')
  and comment not like '%‡πÄ‡∏™‡∏µ‡∏¢‡∏á%'
  limit 5; """).fetchdf()
  st.write(design)


